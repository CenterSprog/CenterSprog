// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/Feedback.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace gRPCClient {
  public static partial class FeedbackService
  {
    static readonly string __ServiceName = "FeedbackService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::gRPCClient.RequestAddFeedback> __Marshaller_RequestAddFeedback = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::gRPCClient.RequestAddFeedback.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::gRPCClient.Feedback> __Marshaller_Feedback = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::gRPCClient.Feedback.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::gRPCClient.RequestGetFeedbackById> __Marshaller_RequestGetFeedbackById = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::gRPCClient.RequestGetFeedbackById.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::gRPCClient.ResponseGetFeedback> __Marshaller_ResponseGetFeedback = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::gRPCClient.ResponseGetFeedback.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::gRPCClient.RequestGetFeedbackByHandInIdAndStudentUsername> __Marshaller_RequestGetFeedbackByHandInIdAndStudentUsername = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::gRPCClient.RequestGetFeedbackByHandInIdAndStudentUsername.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::gRPCClient.RequestAddFeedback, global::gRPCClient.Feedback> __Method_addFeedback = new grpc::Method<global::gRPCClient.RequestAddFeedback, global::gRPCClient.Feedback>(
        grpc::MethodType.Unary,
        __ServiceName,
        "addFeedback",
        __Marshaller_RequestAddFeedback,
        __Marshaller_Feedback);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::gRPCClient.RequestGetFeedbackById, global::gRPCClient.ResponseGetFeedback> __Method_getFeedbackById = new grpc::Method<global::gRPCClient.RequestGetFeedbackById, global::gRPCClient.ResponseGetFeedback>(
        grpc::MethodType.Unary,
        __ServiceName,
        "getFeedbackById",
        __Marshaller_RequestGetFeedbackById,
        __Marshaller_ResponseGetFeedback);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::gRPCClient.RequestGetFeedbackByHandInIdAndStudentUsername, global::gRPCClient.ResponseGetFeedback> __Method_getFeedbackByHandInIdAndStudentUsername = new grpc::Method<global::gRPCClient.RequestGetFeedbackByHandInIdAndStudentUsername, global::gRPCClient.ResponseGetFeedback>(
        grpc::MethodType.Unary,
        __ServiceName,
        "getFeedbackByHandInIdAndStudentUsername",
        __Marshaller_RequestGetFeedbackByHandInIdAndStudentUsername,
        __Marshaller_ResponseGetFeedback);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::gRPCClient.FeedbackReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for FeedbackService</summary>
    public partial class FeedbackServiceClient : grpc::ClientBase<FeedbackServiceClient>
    {
      /// <summary>Creates a new client for FeedbackService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public FeedbackServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for FeedbackService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public FeedbackServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected FeedbackServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected FeedbackServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::gRPCClient.Feedback addFeedback(global::gRPCClient.RequestAddFeedback request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return addFeedback(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::gRPCClient.Feedback addFeedback(global::gRPCClient.RequestAddFeedback request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_addFeedback, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::gRPCClient.Feedback> addFeedbackAsync(global::gRPCClient.RequestAddFeedback request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return addFeedbackAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::gRPCClient.Feedback> addFeedbackAsync(global::gRPCClient.RequestAddFeedback request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_addFeedback, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::gRPCClient.ResponseGetFeedback getFeedbackById(global::gRPCClient.RequestGetFeedbackById request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getFeedbackById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::gRPCClient.ResponseGetFeedback getFeedbackById(global::gRPCClient.RequestGetFeedbackById request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_getFeedbackById, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::gRPCClient.ResponseGetFeedback> getFeedbackByIdAsync(global::gRPCClient.RequestGetFeedbackById request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getFeedbackByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::gRPCClient.ResponseGetFeedback> getFeedbackByIdAsync(global::gRPCClient.RequestGetFeedbackById request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_getFeedbackById, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::gRPCClient.ResponseGetFeedback getFeedbackByHandInIdAndStudentUsername(global::gRPCClient.RequestGetFeedbackByHandInIdAndStudentUsername request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getFeedbackByHandInIdAndStudentUsername(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::gRPCClient.ResponseGetFeedback getFeedbackByHandInIdAndStudentUsername(global::gRPCClient.RequestGetFeedbackByHandInIdAndStudentUsername request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_getFeedbackByHandInIdAndStudentUsername, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::gRPCClient.ResponseGetFeedback> getFeedbackByHandInIdAndStudentUsernameAsync(global::gRPCClient.RequestGetFeedbackByHandInIdAndStudentUsername request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getFeedbackByHandInIdAndStudentUsernameAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::gRPCClient.ResponseGetFeedback> getFeedbackByHandInIdAndStudentUsernameAsync(global::gRPCClient.RequestGetFeedbackByHandInIdAndStudentUsername request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_getFeedbackByHandInIdAndStudentUsername, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override FeedbackServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new FeedbackServiceClient(configuration);
      }
    }

  }
}
#endregion
