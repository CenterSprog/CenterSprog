@page "/users/{username}"
@using Domain.Models
@using HttpClients.ClientInterfaces
@attribute [Authorize("MustBeAdmin")]
@inject IUserService UserService
 
@if (_detailedUser != null)
{
    <div class="card mb-3" style="width: 18rem;">
        <img src="https://xsgames.co/randomusers/avatar.php?g=pixel" class="card-img-top" alt="User avatar">
        <div class="card-body">
            <h5 class="card-title"><strong>Name: </strong>@_detailedUser.FirstName @_detailedUser.LastName</h5>
            <p class="card-text"><strong>Username: </strong>@_detailedUser.Username </p>
            <p class="card-text"><strong>Password: </strong>@_detailedUser.Password </p>
            <p class="card-text"><strong>Email:</strong> @_detailedUser.Email</p>
            <p class="card-text"><small class="text-muted">@_detailedUser.Role</small></p>
        </div>
    </div>
}


@if (_msg != null)
{
    <div class="mt-4 alert-danger alert">
        @_msg
    </div>
}


@code {
    [Parameter] 
    public string Username { get; set; }
    private User _detailedUser { get; set; }
    private string _msg { get; set; }


    protected async override Task OnInitializedAsync()
    {
        _msg = null;
        _detailedUser = null;
        try
        {
            _detailedUser = await UserService.GetAsync(Username);
        }
        catch (Exception e)
        {
            _msg = e.Message;
        }
    }

}