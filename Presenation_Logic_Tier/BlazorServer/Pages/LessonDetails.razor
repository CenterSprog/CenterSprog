@page "/{classId}/Lessons/{lessonId}"  
@using Domain.Models
@using HttpClients.ClientInterfaces
@using Domain.DTOs.HomeworkDTO
@using Domain.DTOs.LessonDTO
@inject ILessonService lessonService
@inject IClassService classService
@inject IHandInHomeworkService HandInHomeworkService
@inject AuthenticationStateProvider AuthenticationStateProvider

<AuthorizeView>
    <Authorized>
        @if (lesson != null)
        {
            <div class="lesson-container">
                <div class="lesson-card">
                    <div class="lesson-header">
                        <div class="icon-container">
                            <img src="/notebook.png" alt="Lesson Icon"/>
                        </div>
                        <div class="lesson-header-content">
                            <h3>Lesson. @lesson.Date @lesson.Topic</h3>
                        </div>
                    </div>
                    <div class="lesson-description">
                        <p>@lesson.Description</p>
                    </div>
                    <AuthorizeView Policy="MustBeTeacher">
                        <Authorized Context="teacherAuthorized">
                            @if (attendees != null)
                            {
                                <AttendanceComponent Attendees="attendees.ToList()" MarkedAttendees="lesson.Attendees" LessonId="@lessonId"/>
                            }
                        </Authorized>
                    </AuthorizeView>
                </div>
            </div>

            @if (lesson.Homework != null)
            {
                <div class="homework-container">
                    <div class="homework-card">
                        <div class="homework-header">
                            <div class="icon-container">
                                <img src="/homework.png" alt="Homework Icon"/>
                            </div>
                            <div class="homework-header-content">
                                <h3>Homework. @lesson.Date @lesson.Homework.Title</h3>
                            </div>
                        </div>
                        <div class="homework-description">
                            <p>@lesson.Homework.Description</p>
                            <p>
                                <strong>Deadline:</strong> @lesson.Homework.Deadline
                            </p>
                        </div>
                        <div class="input-container">

                            @if (!homeworkSubmitted)
                            {
                                <input @bind="answer" type="text" placeholder="Paste your answer here"/>
                                <button @onclick="HandInHomework" type="button">
                                    <strong>Hand in</strong>
                                </button>
                            }
                            else
                            {
                                <div class="submitted-container">
                                    <button>
                                        <strong>Submitted</strong>
                                    </button>
                                    <button @onclick="SeeFeedback" type="button">
                                        <strong>See feedback</strong>
                                    </button>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="homework-container homework-no-content">
                    <div class="homework-card">
                        <div class="homework-header">
                            <div class="icon-container">
                                <img src="/homework.png" alt="Homework Icon"/>
                            </div>
                            <div class="homework-header-content">
                                <h3>Homework</h3>
                                <p>No homework for this lesson yet. Check back later!</p>
                            </div>
                        </div>
                    </div>
                </div>
            }

            @if (Msg is not null)
            {
                <div>
                    @Msg
                </div>
            }

            <AuthorizeView Policy="MustBeTeacher">
                <Authorized Context="teacherAuthorized">
                    @if (lesson.Homework == null)
                    {
                        <AssignHomeworkComponent LessonId=@lessonId LessonDate=@lesson.Date/>
                    }
                </Authorized>
            </AuthorizeView>
        }

    </Authorized>

    <NotAuthorized>
        <p>You are not authorized to view this content.</p>
    </NotAuthorized>
</AuthorizeView>

@code {

    [Parameter]
    public string classId { get; set; }

    [Parameter]
    public string lessonId { get; set; }

    Lesson lesson;
    Homework homework;
    HandInHomework handInHomework;
    private string answer;
    public string Msg { get; set; }
    User user;
    public HomeworkHandInDTO Dto { get; set; }
    public IEnumerable<User> attendees { get; set; }

    private bool homeworkSubmitted = false;

    protected override async Task OnInitializedAsync()
    {
        attendees = new List<User>();
        try
        {
            lesson = await lessonService.GetByIdAsync(lessonId);
            homework = lesson.Homework;
            handInHomework = new HandInHomework
            {
                Id = "",
                Answer = answer
            };
            attendees = await classService.GetAllAttendeesAsync(classId);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            Msg = $"{e.Message}";
        }
    }


    private async Task HandInHomework()
    {
        try
        {
            handInHomework.Answer = answer;

            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            var user = authState.User;
            var username = user.Identity?.Name;

            Dto = new HomeworkHandInDTO(homework.Id, username, handInHomework);
            await HandInHomeworkService.HandInHomework(Dto);
            Console.WriteLine("Homework submitted successfully!");

            homeworkSubmitted = true;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error submitting homework: {ex.Message}");
            Msg = $"Error submitting homework: {ex.Message}";
        }
    }

    private void SeeFeedback()
    {
    // see feedback logic 
    }

}