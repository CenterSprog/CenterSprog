@page "/{classId}/Lessons/{lessonId}"  
@using Domain.Models
@using HttpClients.ClientInterfaces
@using Domain.DTOs.HomeworkDTO
@inject ILessonService lessonService
@inject IHandInHomeworkService HandInHomeworkService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IFeedbackService FeedbackService

@if (Lesson != null)
{
    <LessonDetailComponent Lesson=@Lesson/>

    @if (Lesson.Homework != null)
    {
        <div class="homework-container">
            <div class="homework-card">
                <div class="homework-header">
                    <div class="icon-container">
                        <img src="/homework.png" alt="Homework Icon"/>
                    </div>
                    <div class="homework-header-content">
                        <h3>Homework. @Lesson.Date @Lesson.Homework.Title</h3>
                    </div>
                </div>
                <div class="homework-description">
                    <p>@Lesson.Homework.Description</p>
                    <p>
                        <strong>Deadline:</strong> @Lesson.Homework.Deadline
                    </p>
                </div>
                <AuthorizeView Policy="MustBeTeacher">
                    <Authorized Context="teacherAuthorized">

                        <ViewSubmittedHomeworksComponent LessonId="@lessonId" ClassId="@classId"/>

                    </Authorized>
                </AuthorizeView>


                <AuthorizeView Policy="MustBeStudent">
                    <Authorized Context="studentAuthorized">

                        <HandInHomeworkComponent LessonId="@lessonId" ClassId="@classId"/>

                    </Authorized>
                </AuthorizeView>
            </div>
        </div>
    }
    else
    {
        <div class="homework-container homework-no-content">
            <div class="homework-card">
                <div class="homework-header">
                    <div class="icon-container">
                        <img src="/homework.png" alt="Homework Icon"/>
                    </div>
                    <div class="homework-header-content">
                        <h3>Homework. </h3>
                    </div>
                </div>
                <div class="homework-description">
                    <p>No homework for this lesson yet. Check back later!</p>
                </div>
            </div>
        </div>
    }

    <AuthorizeView Policy="MustBeTeacher">
        <Authorized Context="teacherAuthorized">
            @if (Lesson.Homework == null)
            {
                <AssignHomeworkComponent LessonId=@lessonId LessonDate=@Lesson.Date/>
            }
        </Authorized>
    </AuthorizeView>
}


@code {

    [Parameter]
    public string classId { get; set; }

    [Parameter]
    public string lessonId { get; set; }

    Lesson Lesson { get; set; }
    Homework Homework { get; set; }
    HandInHomework handInHomework { get; set; }
    User User { get; set; }
    Feedback Feedback { get; set; }

    public bool HomeworkSubmitted { get; set; }
    public string Answer { get; set; }
    public string Msg { get; set; }
    private string studentUsername { get; set; }


    protected override async Task OnInitializedAsync()
    {
        Lesson = await lessonService.GetByIdAsync(lessonId);
        Msg = null;
        Answer = null;
        HomeworkSubmitted = false;
        Feedback = new Feedback();
        User = new User();
        Homework = Lesson.Homework;
        handInHomework = new HandInHomework();
        studentUsername = null;


        await FetchHandins();
        await base.OnInitializedAsync();
    }

    private async Task FetchHandins()
    {
        try
        {
            Msg = null;

            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            var user = authState.User;
            var username = user.Identity?.Name;

            try
            {
                handInHomework = await HandInHomeworkService.GetHandInByHomeworkIdAndStudentUsernameAsync(Homework.Id, username);
                HomeworkSubmitted = handInHomework != null;
            }
            catch (Exception e)
            {
                HomeworkSubmitted = false;
            }
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            Msg = e.Message;
        }
    }

}